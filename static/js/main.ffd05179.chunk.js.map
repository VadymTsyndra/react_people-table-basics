{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","PersonLink.tsx","PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","user","slug","useParams","classNames","to","sex","name","born","died","mother","motherName","father","fatherName","PeoplePage","useState","users","setUsers","error","setError","useEffect","fetchData","usersFromServer","usersWithParents","map","find","findUser","requestError","Error","length","getBackgroundClass","isActive","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ffd05179.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from './types';\n\ntype Props = {\n  user: Person;\n};\n\nexport const PersonLink:React.FC<Props> = ({ user }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': user.slug === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${user.slug}`}\n          className={classNames({\n            'has-text-danger': user.sex === 'f',\n          })}\n        >\n          {user.name}\n        </Link>\n      </td>\n\n      <td>{user.sex}</td>\n      <td>{user.born}</td>\n      <td>{user.died}</td>\n      {user.mother ? (\n        <td>\n          <Link\n            to={`/people/${user.mother.slug}`}\n            className={classNames({ 'has-text-danger': user.motherName })}\n          >\n            {user.motherName || '-'}\n          </Link>\n        </td>\n      ) : (\n        <td>\n          {user.motherName || '-'}\n        </td>\n      )}\n\n      {user.father ? (\n        <td>\n          <Link\n            to={`/people/${user.father.slug}`}\n          >\n            {user.fatherName ? user.fatherName : '-'}\n          </Link>\n        </td>\n      ) : (\n        <td>\n          {user.fatherName ? user.fatherName : '-'}\n        </td>\n      )}\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from './components/Loader';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { PersonLink } from './PersonLink';\n\nexport const PeoplePage = () => {\n  const [users, setUsers] = useState<Person[]>([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    try {\n      const fetchData = async () => {\n        const usersFromServer = await getPeople();\n\n        const usersWithParents = usersFromServer.map(user => ({\n          ...user,\n          mother: usersFromServer.find(\n            findUser => user.motherName === findUser.name,\n          ),\n          father: usersFromServer.find(\n            findUser => user.fatherName === findUser.name,\n          ),\n        }));\n\n        setUsers(usersWithParents);\n      };\n\n      fetchData();\n    } catch (requestError) {\n      setError('Something Went Wrong');\n      throw new Error(`Failed to fetch data: ${requestError}`);\n    }\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!users && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {error}\n            </p>\n          )}\n\n          {users && !users.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {users && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {users.map((user) => (\n                  <PersonLink user={user} key={user.slug} />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\n\nimport './App.scss';\nimport {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport { PeoplePage } from './PeoplePage';\n\nconst getBackgroundClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getBackgroundClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getBackgroundClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route\n            path=\"/people/:slug\"\n            element={<PeoplePage />}\n          />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}